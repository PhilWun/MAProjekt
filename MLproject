name: MA Projekt

conda_env: conda.yaml

entry_points:
  pennylane_numpy:
    parameters:
      qnn: {type: string, default: "QNN1"}
      qnum: {type: float, default: 3}
      optimizer: {type: string, default: "Adam"}
      stepsize: {type: float, default: 0.1}
      eps: {type: float, default: 1e-8}
      beta1: {type: float, default: 0.9}
      beta2: {type: float, default: 0.99}
      momentum: {type: float, default: 0.9}
      decay: {type: float, default: 0.9}
      steps: {type: float, default: 100}
    command: "python src/pl/numpy_examples.py --qnn {qnn} --qnum {qnum} --optimizer {optimizer} --stepsize {stepsize} --eps {eps} --beta1 {beta1} --beta2 {beta2} --momentum {momentum} --decay {decay} --steps {steps}"
  pennylane_pytorch:
    parameters:
      dataset: {type: string, default: "trivial"}
      dataset_fraction: {type: float, default: 1.0}
      scaler: {type: string, default: "none"}
      model: {type: string, default: "quantum"}
      model_args: {type: string, default: "QNN1,false,2"}
      steps: {type: float, default: 100}
      batch_size: {type: float, default: 1}
      optimizer: {type: string, default: "Adam"}
      optimizer_args: {type: string, default: "0.1,0.9,0.999,1e-08,0,false"}
      seed: {type: string, default: ""}
    command: "python src/pl/pytorch/cli.py --dataset {dataset} --dataset_fraction {dataset_fraction} --scaler {scaler} --model {model} --model_args {model_args} --steps {steps} --batch_size {batch_size} --optimizer {optimizer} --optimizer_args {optimizer_args} --seed {seed}"
  qiskit:
    parameters:
      qnn: {type: string, default: "QNN1"}
      qnum: {type: float, default: 3}
      optimizer: {type: string, default: "ADAM"}
      maxiter: {type: float, default: 100}
      tol: {type: float, default: 1e-6}
      lr: {type: float, default: 0.1}
      beta1: {type: float, default: 0.9}
      beta2: {type: float, default: 0.99}
      noise_factor: {type: float, default: 1e-8}
      eps: {type: float, default: 0.1}
      gtol: {type: float, default: 1e-05}
      rhobeg: {type: float, default: 1.0}
      maxfun: {type: float, default: 10000}
      factr: {type: float, default: 10}
      sampling_radius: {type: float, default: 1e-6}
      sampling_size_factor: {type: float, default: 1}
      initial_step_size: {type: float, default: 0.01}
      min_step_size: {type: float, default: 1e-10}
      step_size_multiplier: {type: float, default: 0.4}
      armijo_parameter: {type: float, default: 0.1}
      max_failed_rejection_sampling: {type: float, default: 50}
      xtol: {type: float, default: 0.0001}
      adaptive: {type: float, default: 0}
      reset_interval: {type: float, default: 32}
      ftol: {type: float, default: 1e-6}
      c0: {type: float, default: 0.6283185307179586}
      c1: {type: float, default: 0.1}
      c2: {type: float, default: 0.602}
      c3: {type: float, default: 0.101}
      c4: {type: float, default: 0}
      skip_calibration: {type: float, default: 0}
      accuracy: {type: float, default: 0}
    command: "python src/qk/main.py --qnn {qnn} --qnum {qnum} --optimizer {optimizer} --maxiter {maxiter} --tol {tol} --lr {lr} --beta1 {beta1} --beta2 {beta2} --noise_factor {noise_factor} --eps {eps} --gtol {gtol} --rhobeg {rhobeg} --maxfun {maxfun} --factr {factr} --sampling_radius {sampling_radius} --sampling_size_factor {sampling_size_factor} --initial_step_size {initial_step_size} --min_step_size {min_step_size} --step_size_multiplier {step_size_multiplier} --armijo_parameter {armijo_parameter} --max_failed_rejection_sampling {max_failed_rejection_sampling} --xtol {xtol} --adaptive {adaptive} --reset_interval {reset_interval} --ftol {ftol} --c0 {c0} --c1 {c1} --c2 {c2} --c3 {c3} --c4 {c4} --skip_calibration {skip_calibration} --accuracy {accuracy}"
